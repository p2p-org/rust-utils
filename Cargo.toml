[package]
edition = "2021"
name = "rust-utils"
version = "1.0.0"

[lib]
crate-type = ["lib"]

[dependencies]
anyhow = { version = "1.0.56", optional = true }
async-trait = { version = "0.1.57", optional = true }
axum-tracing-opentelemetry = { version = "0.5.0", optional = true }
backoff = { version = "0.4.0", features = ["futures", "tokio"], optional = true }
borsh = { version = "0.9.3", optional = true }
bs58 = { version = "0.4.0", optional = true }
chrono = { version = "0.4", optional = true }
config = { version = "0.13", features = ["toml"], optional = true }
ed25519-dalek = { version = "1.0.1", optional = true }
ethereum-types = { version = "0.13", optional = true }
flexi_logger = { version = "0.22", optional = true }
futures = { version = "0.3.21", optional = true }
gcloud-env = { version = "0.1.0", optional = true }
http = { version = "0.2", optional = true }
jsonrpsee = { version = "0.18.2", features = ["full"], optional = true }
lapin = { version = "2.1", optional = true }
lazy_static = { version = "1.4.0", optional = true }
log = { version = "0.4", features = [
  "kv_unstable",
  "kv_unstable_serde",
], optional = true }
opentelemetry = { version = "0.18", features = ["rt-tokio"], optional = true }
opentelemetry-jaeger = { version = "0.17", features = [
  "rt-tokio",
  "reqwest_collector_client",
], optional = true }
opentelemetry-semantic-conventions = { version = "0.10.0", optional = true }
paste = { version = "1", optional = true }
rand = { version = "0.7", optional = true }
reqwest = { version = "0.11", features = ["blocking", "json"], optional = true }
rustc-hex = { version = "2.1", optional = true }
scheduled-thread-pool = { version = "0.2", optional = true }
sentry = { version = "0.26.0", optional = true }
sentry-log = { version = "0.26.0", optional = true }
sentry-tracing = { version = "0.27", optional = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_with = { version = "3", optional = true }
solana-client = { version = "1.14", optional = true }
solana-sdk = { version = "1.14", optional = true }
sqlx = { version = "0.6", features = ["runtime-tokio-native-tls"], optional = true }
stream-cancel = { version = "0.8", optional = true }
strum = { version = "0.21", optional = true }
strum_macros = { version = "0.21", optional = true }
thiserror = { version = "1.0", optional = true }
tokio = { version = "1", features = ["full"], optional = true }
tokio-executor-trait = { version = "2.1", optional = true }
tokio-reactor-trait = { version = "1.1", optional = true }
tower = { version = "0.4", features = ["tokio"], optional = true }
tower-http = { version = "0.4", features = ["cors", "trace"], optional = true }
tower-opentelemetry = { version = "0.2.0", optional = true }
tracing = { version = "0.1", optional = true }
tracing-bunyan-formatter = { version = "0.3", optional = true }
tracing-log = { version = "0.1", optional = true }
tracing-opentelemetry = { version = "0.18", optional = true }
tracing-stackdriver = { version = "0.5", optional = true }
tracing-subscriber = { version = "0.3", features = [
  "registry",
  "env-filter",
], optional = true }

[dev-dependencies]
claim = "0.5.0"

[features]
wrappers = ["bs58", "jsonrpsee", "thiserror", "serde_with"]
solana = ["solana-sdk"]
crypto = ["ed25519-dalek", "borsh", "bs58", "rand"]
db = ["sqlx/postgres", "async-trait", "serde_with"]
default = []
error = ["strum", "strum_macros", "thiserror"]
ethereum = ["rustc-hex", "serde_with", "ethereum-types", "sqlx", "thiserror"]
logger = ["sentry", "sentry-log", "log", "flexi_logger", "anyhow", "chrono"]
macros = []
rabbitmq = ["anyhow", "async-trait", "backoff", "futures", "lapin", "log", "tokio", "tokio-executor-trait", "tokio-reactor-trait", "stream-cancel"]
rpc = ["gcloud-env", "lazy_static", "serde_with"]
server = ["jsonrpsee", "tokio", "tracing", "tower-http", "tower", "axum-tracing-opentelemetry"]
client = ["jsonrpsee", "tower", "tower-opentelemetry"]
settings = ["config", "log", "serde_with", "paste", "thiserror"]
solana-backoff = ["backoff", "tracing", "solana-client", "futures", "tokio"]
telemetry = ["tracing", "opentelemetry", "opentelemetry-jaeger", "tracing-opentelemetry", "tracing-subscriber", "tracing-bunyan-formatter", "tracing-log", "tracing-stackdriver", "sentry-tracing", "sentry", "jsonrpsee", "anyhow", "async-trait", "http", "opentelemetry-semantic-conventions"]
tokens = ["error", "borsh", "solana-client", "solana-sdk", "reqwest", "anyhow", "log"]
